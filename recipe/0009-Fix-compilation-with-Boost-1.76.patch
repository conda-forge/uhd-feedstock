From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Mon, 12 Sep 2022 12:53:08 -0400
Subject: [PATCH] Fix compilation with Boost >= 1.76.

---
 host/lib/usrp/cores/rx_dsp_core_3000.cpp      |  1 +
 host/lib/usrp/cores/rx_frontend_core_3000.cpp |  1 +
 host/lib/usrp/usrp2/usrp2_impl.cpp            | 13 +++++--------
 3 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/host/lib/usrp/cores/rx_dsp_core_3000.cpp b/host/lib/usrp/cores/rx_dsp_core_3000.cpp
index ff7caf105..5ed5aab5c 100644
--- a/host/lib/usrp/cores/rx_dsp_core_3000.cpp
+++ b/host/lib/usrp/cores/rx_dsp_core_3000.cpp
@@ -15,6 +15,7 @@
 #include <boost/assign/list_of.hpp>
 #include <boost/bind.hpp>
 #include <boost/math/special_functions/round.hpp>
+#include <boost/math/special_functions/sign.hpp>
 #include <boost/thread/thread.hpp> //thread sleep
 #include <algorithm>
 #include <cmath>
diff --git a/host/lib/usrp/cores/rx_frontend_core_3000.cpp b/host/lib/usrp/cores/rx_frontend_core_3000.cpp
index 7f88a3e98..6e459a71c 100644
--- a/host/lib/usrp/cores/rx_frontend_core_3000.cpp
+++ b/host/lib/usrp/cores/rx_frontend_core_3000.cpp
@@ -13,6 +13,7 @@
 #include <boost/assign/list_of.hpp>
 #include <boost/bind.hpp>
 #include <boost/math/special_functions/round.hpp>
+#include <boost/math/special_functions/sign.hpp>
 
 using namespace uhd;
 
diff --git a/host/lib/usrp/usrp2/usrp2_impl.cpp b/host/lib/usrp/usrp2/usrp2_impl.cpp
index 1be4c7339..9ff08d353 100644
--- a/host/lib/usrp/usrp2/usrp2_impl.cpp
+++ b/host/lib/usrp/usrp2/usrp2_impl.cpp
@@ -22,6 +22,7 @@
 #include <boost/asio/ip/address_v4.hpp>
 #include <boost/asio.hpp> //used for htonl and ntohl
 #include <boost/thread.hpp>
+#include <cmath>
 
 using namespace uhd;
 using namespace uhd::usrp;
@@ -844,20 +845,19 @@ double usrp2_impl::set_tx_dsp_freq(
         _tree->access<double>("/mboards/"+mb+"/tick_rate").get();
 
     //calculate the DAC shift (multiples of rate)
-    const int sign = boost::math::sign(new_freq);
-    const int zone = std::min(boost::math::iround(new_freq/tick_rate), 2);
-    const double dac_shift = sign*zone*tick_rate;
+    const int zone = std::max(std::min<int>(std::lround(new_freq/tick_rate), 2), -2);
+    const double dac_shift = zone*tick_rate;
     new_freq -= dac_shift; //update FPGA DSP target freq
     UHD_LOG_TRACE("USRP2",
         "DSP Tuning: Requested " + std::to_string(freq_/1e6) + " MHz, Using "
-        "Nyquist zone " + std::to_string(sign*zone) + ", leftover DSP tuning: "
+        "Nyquist zone " + std::to_string(zone) + ", leftover DSP tuning: "
         + std::to_string(new_freq/1e6) + " MHz.");
 
     //set the DAC shift (modulation mode)
     if (zone == 0) {
         _mbc[mb].codec->set_tx_mod_mode(0); //no shift
     } else {
-        _mbc[mb].codec->set_tx_mod_mode(sign*4/zone); //DAC interp = 4
+        _mbc[mb].codec->set_tx_mod_mode(4/zone); //DAC interp = 4
     }
 
     return _mbc[mb].tx_dsp->set_freq(new_freq) + dac_shift; //actual freq
@@ -878,9 +878,6 @@ meta_range_t usrp2_impl::get_tx_dsp_freq_range(const std::string &mb)
     );
 }
 
-#include <boost/math/special_functions/round.hpp>
-#include <boost/math/special_functions/sign.hpp>
-
 void usrp2_impl::update_clock_source(const std::string &mb, const std::string &source){
     //NOTICE: U2_REG_MISC_CTRL_CLOCK is on the wb clock, and cannot be set from fifo_ctrl
     //clock source ref 10mhz
-- 
2.35.1

