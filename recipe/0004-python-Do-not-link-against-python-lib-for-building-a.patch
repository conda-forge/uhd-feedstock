From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <rvolz@mit.edu>
Date: Thu, 31 Oct 2019 17:02:07 -0400
Subject: [PATCH] python: Do not link against python lib for building an
 extension module.

This fixes a segmentation fault when trying to use the python module on
OSX when built with conda (unsure why it doesn't arise otherwise).
Instead of linking against the python library, it is proper to not link
against the library and, for OSX builds, add linker options for
"-undefined" and "dynamic_lookup". This is precisely what the CMake
FindPython module does for linking against the Python::Module target.

See https://blog.tim-smith.us/2015/09/python-extension-modules-os-x
and https://bugs.python.org/issue36721
---
 host/python/CMakeLists.txt | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/host/python/CMakeLists.txt b/host/python/CMakeLists.txt
index fcb29ac2c..c29eb6f6a 100644
--- a/host/python/CMakeLists.txt
+++ b/host/python/CMakeLists.txt
@@ -51,7 +51,16 @@ target_include_directories(pyuhd PUBLIC
     ${PYBIND11_INCLUDE_DIR}
 )
 
-target_link_libraries(pyuhd ${Boost_LIBRARIES} ${PYTHON_LIBRARIES} uhd)
+if(WIN32)
+    target_link_libraries(pyuhd ${Boost_LIBRARIES} ${PYTHON_LIBRARIES} uhd)
+else()
+    # for extension module, proper to NOT link against python library and instead
+    # add dynamic lookup link option on OSX
+    target_link_libraries(pyuhd ${Boost_LIBRARIES} uhd)
+    if(APPLE)
+        target_link_options(pyuhd PRIVATE "LINKER:-undefined,dynamic_lookup")
+    endif(APPLE)
+endif(WIN32)
 # Copy pyuhd library to the staging directory
 add_custom_command(TARGET pyuhd
     POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:pyuhd> ${CMAKE_CURRENT_BINARY_DIR}/uhd/$<TARGET_FILE_NAME:pyuhd>)
-- 
2.35.1

